<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="highOrders" duration-ms="46543" started-at="2018-08-16T10:46:20Z" finished-at="2018-08-16T10:47:07Z">
    <groups>
      <group name="checkintest">
        <method signature="SubsOrPurWebFacadeTest.add_appAmt_less_product_limit_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="add_appAmt_less_product_limit_test" class="com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest"/>
        <method signature="SubsOrPurWebFacadeTest.web_facade_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="web_facade_test" class="com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest"/>
      </group> <!-- checkintest -->
      <group name="functest">
        <method signature="ProductLimitTest.add_appAmt_less_product_limit_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="add_appAmt_less_product_limit_test" class="com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest"/>
        <method signature="ProductLimitTest.add_purAmt_less_product_limit_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="add_purAmt_less_product_limit_test" class="com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest"/>
        <method signature="SubsOrPurWebFacadeTest.add_appAmt_less_product_limit_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="add_appAmt_less_product_limit_test" class="com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest"/>
        <method signature="SubsOrPurWebFacadeTest.fund_range_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="fund_range_test" class="com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest"/>
        <method signature="SubsOrPurWebFacadeTest.web_facade_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="web_facade_test" class="com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest"/>
      </group> <!-- functest -->
    </groups>
    <test name="trade" duration-ms="46543" started-at="2018-08-16T10:46:20Z" finished-at="2018-08-16T10:47:07Z">
      <class name="com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="9" started-at="2018-08-16T10:46:20Z" finished-at="2018-08-16T10:46:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2146" started-at="2018-08-16T10:46:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-08-16T10:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-08-16T10:46:22Z" finished-at="2018-08-16T10:46:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest.add_appAmt_less_product_limit_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="setUp" is-config="true" duration-ms="139" started-at="2018-08-16T10:46:22Z" finished-at="2018-08-16T10:46:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="add_appAmt_less_product_limit_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="add_appAmt_less_product_limit_test" duration-ms="8404" started-at="2018-08-16T10:46:23Z" description="下单追加购买金额小于产品最低追加申请金额" finished-at="2018-08-16T10:46:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[交易金额小于追加认申购下限验证失败. expected [Z3000000] but found [Z3000027]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 交易金额小于追加认申购下限验证失败. expected [Z3000000] but found [Z3000027]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest.add_appAmt_less_product_limit_test(SubsOrPurWebFacadeTest.java:134)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:230)
at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:242)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:579)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_appAmt_less_product_limit_test -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-08-16T10:46:31Z" finished-at="2018-08-16T10:46:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest.add_appAmt_less_product_limit_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:31Z" finished-at="2018-08-16T10:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:31Z" finished-at="2018-08-16T10:46:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest.fund_range_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="setUp" is-config="true" duration-ms="2" started-at="2018-08-16T10:46:31Z" finished-at="2018-08-16T10:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="fund_range_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="fund_range_test" duration-ms="8200" started-at="2018-08-16T10:46:31Z" description="高端产品极差校验失败" finished-at="2018-08-16T10:46:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fund_range_test -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:39Z" finished-at="2018-08-16T10:46:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest.fund_range_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:39Z" finished-at="2018-08-16T10:46:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:39Z" finished-at="2018-08-16T10:46:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest.web_facade_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="setUp" is-config="true" duration-ms="1" started-at="2018-08-16T10:46:39Z" finished-at="2018-08-16T10:46:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="web_facade_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="web_facade_test" duration-ms="11057" started-at="2018-08-16T10:46:39Z" description="高端网站正常下单" finished-at="2018-08-16T10:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- web_facade_test -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:50Z" finished-at="2018-08-16T10:46:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest.web_facade_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:50Z" finished-at="2018-08-16T10:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest@f58853c]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:50Z" finished-at="2018-08-16T10:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.zxy.high.orders.trade.subsorpur.subsorpurweb.SubsOrPurWebFacadeTest -->
      <class name="com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="4" started-at="2018-08-16T10:46:50Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-08-16T10:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:50Z" finished-at="2018-08-16T10:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-08-16T10:46:50Z" finished-at="2018-08-16T10:46:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest.add_appAmt_less_product_limit_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="setUp" is-config="true" duration-ms="1" started-at="2018-08-16T10:46:50Z" finished-at="2018-08-16T10:46:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="add_appAmt_less_product_limit_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="add_appAmt_less_product_limit_test" duration-ms="8301" started-at="2018-08-16T10:46:50Z" description="追加净购买金额小于产品最低追加净申请金额" finished-at="2018-08-16T10:46:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_appAmt_less_product_limit_test -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:59Z" finished-at="2018-08-16T10:46:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-08-16T10:46:59Z" finished-at="2018-08-16T10:46:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest.add_appAmt_less_product_limit_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-08-16T10:46:59Z" finished-at="2018-08-16T10:46:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest.add_purAmt_less_product_limit_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="setUp" is-config="true" duration-ms="1" started-at="2018-08-16T10:46:59Z" finished-at="2018-08-16T10:46:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="add_purAmt_less_product_limit_test()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="add_purAmt_less_product_limit_test" duration-ms="8241" started-at="2018-08-16T10:46:59Z" description="追加净购买金额小于产品最低追加申请净金额" finished-at="2018-08-16T10:47:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_purAmt_less_product_limit_test -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-08-16T10:47:07Z" finished-at="2018-08-16T10:47:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest.add_purAmt_less_product_limit_test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="tearDown" is-config="true" duration-ms="0" started-at="2018-08-16T10:47:07Z" finished-at="2018-08-16T10:47:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest@1224144a]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-08-16T10:47:07Z" finished-at="2018-08-16T10:47:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.zxy.high.orders.trade.subsorpur.subsorpurweb.ProductLimitTest -->
    </test> <!-- trade -->
  </suite> <!-- highOrders -->
</testng-results>
